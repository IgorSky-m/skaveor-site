server:
  port: 9191
spring:
  zipkin:
    base-url: http://localhost:9411
  sleuth:
    sampler:
      probability: 1.0
  application:
    name: GATEWAY-SERVICE
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedHeaders: "*"
            allowedMethods: "*"
      routes:
        - id: AUTH-SERVICE
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/auth/**
          filters:
            - name: CircuitBreaker
              args:
                name: auth-service
                fallbackUri: forward:/fallback/auth
            - name: AuthenticationFilter

        - id: CATALOG-SERVICE
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/items/**, /deals/**, /categories/**
          filters:
            - name: CircuitBreaker
              args:
                name: catalog-service
                fallbackUri: forward:/fallback/catalog
            - name: AuthenticationFilter

        - id: ORDER-SERVICE
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order/**
          filters:
            - name: CircuitBreaker
              args:
                name: order-service
                fallbackUri: forward:/fallback/order
            - name: AuthenticationFilter

        - id: NEWS-SERVICE
          uri: lb://NEWS-SERVICE
          predicates:
            - Path=/news/**, /advantages/**
          filters:
            - name: CircuitBreaker
              args:
                name: news-service
                fallbackUri: forward:/fallback/news

        - id: MSG-SERVICE
          uri: lb://MSG-SERVICE
          predicates:
            - Path=/messages/email/**
          filters:
            - name: CircuitBreaker
              args:
                name: msg-service
                fallbackUri: forward:/fallback/msg

management:
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: ["circuitbreakers", "circuitbreakerevents", "health"]

resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 2s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
        ignoreExceptions:
          - java.lang.IllegalStateException
      shared:
        slidingWindowSize: 100
        permittedNumberOfCallsInHalfOpenState: 30
        waitDurationInOpenState: 2s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        ignoreExceptions:
          - java.lang.IllegalStateException
    instances:
      order-service:
        baseConfig: default
      catalog-service:
        baseConfig: default
      auth-service:
        baseConfig: default
      news-service:
        baseConfig: default

jwt:
  secret: ${JWT_SECRET}
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
#      defaultZone: http://registry-server-1.com:8761/eureka, http://registry-server-2.com:8762/eureka, http://registry-server-3.com:8763/eureka
            defaultZone: http://localhost:8760/eureka
  instance:
    hostname: localhost